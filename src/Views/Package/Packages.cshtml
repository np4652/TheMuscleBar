@{
    ViewData["Title"] = "Package";
    Layout = "_Layout";
}
<style>
    @@import url("https://fonts.googleapis.com/css?family=Montserrat");

    .card-body {
        background-color: #eee;
    }

    .pricing-table {
        /*background-color: #eee;*/
        font-family: 'Montserrat', sans-serif;
    }

        .pricing-table .block-heading {
            padding-top: 50px;
            margin-bottom: 40px;
            text-align: center;
        }

            .pricing-table .block-heading h2 {
                color: #3b99e0;
            }

            .pricing-table .block-heading p {
                text-align: center;
                max-width: 420px;
                margin: auto;
                opacity: 0.7;
            }

        .pricing-table .heading {
            text-align: center;
            padding-bottom: 10px;
            border-bottom: 1px solid rgba(0, 0, 0, 0.1);
        }

        .pricing-table .item {
            background-color: #ffffff;
            box-shadow: 0px 2px 10px rgba(0, 0, 0, 0.075);
            border-top: 2px solid #5ea4f3;
            padding: 30px;
            overflow: hidden;
            position: relative;
            /*            min-height: calc(415px - 30px);
        */ height: 100%;
        }

        .pricing-table .col-md-5:not(:last-child) .item {
            /*margin-bottom: 30px;*/
        }

        .pricing-table .item button {
            font-weight: 600;
        }

        .pricing-table .ribbon {
            width: 160px;
            height: 32px;
            font-size: 12px;
            text-align: center;
            color: #fff;
            font-weight: bold;
            box-shadow: 0px 2px 3px rgba(136, 136, 136, 0.25);
            background: #4dbe3b;
            transform: rotate(45deg);
            position: absolute;
            right: -42px;
            top: 20px;
            padding-top: 7px;
        }

        .pricing-table .item p {
            text-align: center;
            margin-top: 20px;
            opacity: 0.7;
        }

        .pricing-table .features .feature {
            font-weight: 500;
        }

        .pricing-table .features h4, h5 {
            text-align: center;
            font-size: 16px;
            padding: 2px;
        }

        .pricing-table .price h4 {
            margin: 15px 0;
            font-size: 35px;
            text-align: center;
            color: #2288f9;
        }

            .pricing-table .price h4 i {
                font-size: 30px;
            }

        .pricing-table .buy-now button {
            text-align: center;
            margin: auto;
            font-weight: 600;
            padding: 9px 0;
        }
</style>
<div class="card mt-2">
    <div class="card-body">
        <section class="pricing-table">
            <div class="row justify-content-md-center" id="packages">
            </div>
        </section>
    </div>
</div>

@section scripts{
    <script>
        $(document).ready(function () {
            loadData();
        });
        function loadData() {
            Q.preloader.load();
            $.post('/Package/_Package').done(result => $('#packages').html(result)).fail(xhr => Q.notify(-1, 'An error occurred.')).always(() => Q.preloader.remove());
        }
        window.addEventListener("storage", e => {
            var result = $.parseJSON(event.newValue);
            console.log('callBackResult', result);
            if (result.hasOwnProperty("origin")) {
                if (result.origin === 'addMoney') {
                    window.close();
                    /* note : In Case of CashFree status : -1 - Failed  1 - Success , 2 - Pending */
                    let cashFreePendings = ['', '0', '2', 'pending'];
                    let isPending = cashFreePendings.includes(result.statusCode?.toString().toLowerCase());
                    let iconSrc = `/Images/${isPending ? 'pending' : (result.statusCode == 1 ? 'success' : 'failed')}.png`;
                    let h3Class = `${isPending ? 'text-info' : (result.statusCode == 1 ? 'text-success' : 'text-danger')}`;
                    let statusText = `${isPending ? 'Transaction Pending' : (result.statusCode == 1 ? 'Transaction Successful' : 'Transaction Failed')}`;
                    if (result.gateway === 'CashFree' && isPending) {
                        let _html = `<div id="divStatusResult"><div class="text-center"><span class="h4">Waiting....</span></div>
                                        <div class="text-center mt-5 mb-4">
                                        <div class="mt-5 mb-5"><span class="text-success h1" id="JsTimer">02:00</span> mins</div>
                                        <div>Do not press the back button untill the payment is complete</div>
                                        <button class="btn btn-outline-primary w-75 mt-4" id="mdlCancel">Close</button>
                                     </div></div>`;
                        Q.modal.id = "callBackAlert";
                        Q.modal.title = "Status";
                        Q.modal.content = _html;
                        Q.modal.show(Q.modal.size.large);
                        $('#mdlCancel').click(() => Q.modal.dispose());
                        /* Cashfree Status check*/
                        function CheckCashFreeStatus(TID, t, showJsTimer, onStopTimer) {
                            $.post("/PGCallback/CashFreeStatusCheck", { TID }, function (result) {
                                isPending = cashFreePendings.includes(result.statusCode?.toString().toLowerCase());
                                iconSrc = `/Images/${isPending ? 'pending' : (result.statusCode == 1 ? 'success' : 'failed')}.png`;
                                h3Class = `${isPending ? 'text-info' : (result.statusCode == 1 ? 'text-success' : 'text-danger')}`;
                                statusText = `${isPending ? 'Transaction Pending' : (result.statusCode == 1 ? 'Transaction Successful' : 'Transaction Failed')}`;
                                if (isPending && t < 7) {
                                    setTimeout(function () {
                                        t = t + 1;
                                        CheckCashFreeStatus(TID, t, showJsTimer, onStopTimer);
                                    }, 10 * 1000);
                                } else {
                                    let _result = `<div class="row">
                                                   <div class="col-sm-12 text-center"><img src="${iconSrc}" /><h3 class="${h3Class}">${statusText}</h3></div>
                                                   <div class="col-sm-3"></div><div class="col-sm-3">Amount</div><div class="col-sm-6">${result.amount}</div>
                                                   <div class="col-sm-3"></div>
                                                   <div class="col-sm-3">Transaction Id</div>
                                                   <div class="col-sm-6">${result.transactionID}</div>
                                                   <div class="col-sm-3"></div><div class="col-sm-3">TID</div><div class="col-sm-6">${result.tid}</div>
                                                  </div>`;
                                    $('#divStatusResult').html(_result);
                                    if (showJsTimer != undefined)
                                        showJsTimer.stopTimer();
                                }
                            }).catch(function (er) {
                                console.log(er);
                            }).fail(function (xhr) {
                                an.title = 'Oops';
                                an.content = xhr.status == 0 ? 'Internet Connection was broken' : 'Server error';
                                an.alert(an.type.failed);
                            });
                        }
                        /* End Cashfree Status check*/

                        let showJsTimer = new ShowJsTimer(JsTimer, 2);
                        showJsTimer.startTimer();
                        setTimeout(function () {
                            CheckCashFreeStatus(result.TID, 0, showJsTimer, function () {
                                Q.modal.dispose();
                            });
                        }, 6000);
                    }
                    else {
                        let _html = `<div class="row">
                                       <div class="col-sm-12 text-center">
                                         <img src="${iconSrc}" />
                                         <h3 class="${h3Class}">${statusText}<br/>
                                            <small>${result.statusCode == -1 ? result.reason : ''}</small>
                                          </h3>
                                       </div>
                                     </div>`;
                        Q.modal.id = "callBackAlert";
                        Q.modal.title = "Status";
                        Q.modal.content = _html;
                        Q.modal.show(Q.modal.size.large);
                    }
                }
            }
        }, true);
    </script>
}