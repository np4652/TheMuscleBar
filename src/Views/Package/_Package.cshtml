@model IEnumerable<TheMuscleBar.AppCode.Reops.Entities.BuypackageViewModel>
@{
    bool isTrailHide = Model.Any(x => !x.IsTrail && x.Activated && x.ExpiredOn > 0 );

    var _m = isTrailHide ? Model.Where(x => !x.IsTrail) : Model;
}
@foreach (var item in _m)
{
    <div class="col-md-4 col-lg-3 mb-3">

        <div class="item">
            @if (item.Activated)
            {
                @if (item.ExpiredOn <= 0)
                {
                    <div class="ribbon bg-danger">Expired</div>
                }
                else
                {
                    <div class="ribbon">Purchased</div>
                }
            }
            <div class="heading">
                <h3 class="mb-1">@item.PackageName</h3>
            </div>
            <input type="hidden" id="txtPackageId" value="@item.PackageId" />
            <div class="features mt-2">
                <h5 class="mb-1"><span class="feature">Validity - </span><span class="feature">@item.Validity</span> </h5>
            </div>
            <div class="features mt-2">
                <h5 class="mb-1">
                    <span class="feature">Hit Count - </span><span class="feature">@item.HitCount</span>
                </h5>
            </div>
            <div class="features mt-2">
                <h5 class="mb-1">
                    <span class="feature">No Transaction Fee </span><span class="feature"></span>
                </h5>
            </div>
            <div class="features mt-2">
                <h5 class="mb-1">
                    <span class="feature">Unlimited Account Setup</span><span class="feature"></span>
                </h5>
            </div>
            <div class="features mt-2">
                <h5 class="mb-1">
                    <span class="feature">No Setup Cost </span><span class="feature"></span>
                </h5>
            </div>
            <div class="features mt-2">
                <h5 class="mb-1">
                    <span class="feature">Realtime Transaction </span><span class="feature"></span>
                </h5>
            </div>
            <div class="features mt-2">
                <h5 class="mb-1">
                    <span class="feature"><b>Direct UPI Intent String </b></span><span class="feature"></span>
                </h5>
            </div>
            <div class="features mt-2">
                <h5 class="mb-1">
                    <span class="feature">24*7 WhatsApp Support </span><span class="feature"></span>
                </h5>
            </div>


            <div class="price">
                <h4 class="m-2"><i class="fa fa-rupee-sign"></i> @item.Cost</h4>
            </div>
            <hr>
            @if (item.Activated)
            {
                @if (item.ExpiredOn <= 0)
                {
                    <button class="btn btn-group-lg bg-primary btn-block" onclick="getPackage(@item.PackageId)">Renew Package</button>

                }
                else
                {
                    <p class="text-center mb-0">
                        <span>Expires In : @item.ExpiredOn Days</span>
                    </p>
                }
            }
            else
            {
                <button class="btn btn-group-lg bg-primary btn-block" onclick="getPackage(@item.PackageId)">Buy Package</button>
            }
        </div>
    </div>
}
<script>
    var getPackage = function (PackageId) {
        $.post('/Package/GetPackage', { PackageId }).done(result => {
            if (typeof (result) == 'string') {
                Q.alert({
                    title: 'Choose Gateway',
                    body: result
                });
            }
            else {
                if (result.redirect) {
                    window.open(`/InitiatePayment?packageId=${result.packageId}&paymentGatewayType=${result.pgId}`, "_blank", "toolbar=0,width=900,height=650,left=0,top=0");
                }
                else {
                    Q.notify(result.statusCode, result.responseText);
                    loadData();
                }
            }
        }).fail(xhr => Q.renderError(xhr))
            .always(() => Q.preloader.remove());
    };
</script>